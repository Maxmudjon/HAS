"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HAS = require("../");
var config = new HAS.Config('NodeJS Bridge', '79:E6:B6:63:BC:2C', HAS.categories.bridge, __dirname + '/lights.json', 8090, '200-20-200');
var server = new HAS.Server(config);
var identity = new HAS.Characteristic(1, '14', 'bool', false, false, false, false);
var manufacturer = new HAS.Characteristic(2, '20', 'string', false, false, true, true);
manufacturer.setValue('Hamyar');
var model = new HAS.Characteristic(3, '21', 'string', false, false, true, true);
model.setValue('Model2017');
var name = new HAS.Characteristic(4, '23', 'string', false, false, true, true);
name.setValue('Bridge');
var serialNumber = new HAS.Characteristic(5, '30', 'string', false, false, true, true);
serialNumber.setValue('112-HA-BN');
var firmwareVersion = new HAS.Characteristic(6, '52', 'string', false, false, true, true);
firmwareVersion.setValue('1.0.0');
var service = new HAS.Service(1, '3E', false, false, []);
service.addCharacteristics(identity, manufacturer, model, name, serialNumber);
var accessory = new HAS.Accessory(1);
accessory.addServices(service);
server.addAccessory(accessory);
var identity2 = new HAS.Characteristic(1, '14', 'bool', false, false, false, false);
var manufacturer2 = new HAS.Characteristic(2, '20', 'string', false, false, true, true);
manufacturer2.setValue('Hamyar');
var model2 = new HAS.Characteristic(3, '21', 'string', false, false, true, true);
model2.setValue('Model2017');
var name2 = new HAS.Characteristic(4, '23', 'string', false, false, true, true);
name2.setValue('Fan');
var serialNumber2 = new HAS.Characteristic(5, '30', 'string', false, false, true, true);
serialNumber2.setValue('113-HA-BN');
var firmwareVersion2 = new HAS.Characteristic(6, '52', 'string', false, false, true, true);
firmwareVersion2.setValue('1.0.0');
var service2 = new HAS.Service(1, '3E', false, false, []);
service2.addCharacteristics(identity2, manufacturer2, model2, name2, serialNumber2);
var on = new HAS.Characteristic(1, '25', 'bool', false, true, true, false);
on.setValue(false);
var service3 = new HAS.Service(2, '40', false, true, []);
service3.addCharacteristics(on);
var accessory2 = new HAS.Accessory(2);
accessory2.addServices(service2, service3);
server.addAccessory(accessory2);
server.startServer();
